# Generated by the protocol buffer compiler.  DO NOT EDIT!

from google.protobuf import descriptor
from google.protobuf import message
from google.protobuf import reflection
from google.protobuf import service
from google.protobuf import service_reflection
from google.protobuf import descriptor
# @@protoc_insertion_point(imports)


import arab.types

DESCRIPTOR = descriptor.FileDescriptor(
  name='echo.proto',
  package='echo',
  serialized_pb='\n\necho.proto\x12\x04\x65\x63ho\x1a\x10\x61rab/types.proto\"\x0e\n\x0c\x45mptyMessage\"\x1e\n\x0b\x45\x63hoRequest\x12\x0f\n\x07message\x18\x01 \x02(\t\"@\n\x0c\x45\x63hoResponse\x12\x1e\n\x05\x65rror\x18\x01 \x02(\x0b\x32\x0f.Arab.ErrorCode\x12\x10\n\x08response\x18\x02 \x02(\t2r\n\x0b\x45\x63hoService\x12-\n\x04\x45\x63ho\x12\x11.echo.EchoRequest\x1a\x12.echo.EchoResponse\x12\x34\n\rEchoTunnelMsg\x12\x12.echo.EmptyMessage\x1a\x0f.Arab.TunnelMsgB\x06\x80\x01\x01\x90\x01\x01')




_EMPTYMESSAGE = descriptor.Descriptor(
  name='EmptyMessage',
  full_name='echo.EmptyMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=38,
  serialized_end=52,
)


_ECHOREQUEST = descriptor.Descriptor(
  name='EchoRequest',
  full_name='echo.EchoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='message', full_name='echo.EchoRequest.message', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=54,
  serialized_end=84,
)


_ECHORESPONSE = descriptor.Descriptor(
  name='EchoResponse',
  full_name='echo.EchoResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='error', full_name='echo.EchoResponse.error', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='response', full_name='echo.EchoResponse.response', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=86,
  serialized_end=150,
)

_ECHORESPONSE.fields_by_name['error'].message_type = arab.types._ERRORCODE
DESCRIPTOR.message_types_by_name['EmptyMessage'] = _EMPTYMESSAGE
DESCRIPTOR.message_types_by_name['EchoRequest'] = _ECHOREQUEST
DESCRIPTOR.message_types_by_name['EchoResponse'] = _ECHORESPONSE

class EmptyMessage(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _EMPTYMESSAGE
  
  # @@protoc_insertion_point(class_scope:echo.EmptyMessage)

class EchoRequest(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _ECHOREQUEST
  
  # @@protoc_insertion_point(class_scope:echo.EchoRequest)

class EchoResponse(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _ECHORESPONSE
  
  # @@protoc_insertion_point(class_scope:echo.EchoResponse)


_ECHOSERVICE = descriptor.ServiceDescriptor(
  name='EchoService',
  full_name='echo.EchoService',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=152,
  serialized_end=266,
  methods=[
  descriptor.MethodDescriptor(
    name='Echo',
    full_name='echo.EchoService.Echo',
    index=0,
    containing_service=None,
    input_type=_ECHOREQUEST,
    output_type=_ECHORESPONSE,
    options=None,
  ),
  descriptor.MethodDescriptor(
    name='EchoTunnelMsg',
    full_name='echo.EchoService.EchoTunnelMsg',
    index=1,
    containing_service=None,
    input_type=_EMPTYMESSAGE,
    output_type=arab.types._TUNNELMSG,
    options=None,
  ),
])

class EchoService(service.Service):
  __metaclass__ = service_reflection.GeneratedServiceType
  DESCRIPTOR = _ECHOSERVICE
class EchoService_Stub(EchoService):
  __metaclass__ = service_reflection.GeneratedServiceStubType
  DESCRIPTOR = _ECHOSERVICE

# @@protoc_insertion_point(module_scope)
